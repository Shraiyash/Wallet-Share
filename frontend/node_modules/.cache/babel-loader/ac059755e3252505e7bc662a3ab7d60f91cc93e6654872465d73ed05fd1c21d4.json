{"ast":null,"code":"var _jsxFileName = \"/Users/yash/smart-wallet/frontend/src/components/Transfer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transfer({\n  contract\n}) {\n  _s();\n  const [transferTo, setTransferTo] = useState(\"\");\n  const [transferAmount, setTransferAmount] = useState(\"\");\n  async function handleTransfer() {\n    try {\n      const tx = await contract.transferFunds(transferTo, ethers.utils.parseEther(transferAmount), {\n        value: 0\n      } // Funds come from the contract's balance\n      );\n      await tx.wait();\n      alert(\"Transfer successful!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Transfer failed!\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transfer Funds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Recipient Address\",\n      value: transferTo,\n      onChange: e => setTransferTo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Amount in ETH\",\n      value: transferAmount,\n      onChange: e => setTransferAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTransfer,\n      children: \"Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Transfer, \"aYeWqlqaw5mlwZDxn12AOL4T2FM=\");\n_c = Transfer;\nexport default Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","Transfer","contract","_s","transferTo","setTransferTo","transferAmount","setTransferAmount","handleTransfer","tx","transferFunds","utils","parseEther","value","wait","alert","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/yash/smart-wallet/frontend/src/components/Transfer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\n\nfunction Transfer({ contract }) {\n  const [transferTo, setTransferTo] = useState(\"\");\n  const [transferAmount, setTransferAmount] = useState(\"\");\n\n  async function handleTransfer() {\n    try {\n      const tx = await contract.transferFunds(\n        transferTo,\n        ethers.utils.parseEther(transferAmount),\n        { value: 0 } // Funds come from the contract's balance\n      );\n      await tx.wait();\n      alert(\"Transfer successful!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Transfer failed!\");\n    }\n  }\n\n  return (\n    <div>\n      <h2>Transfer Funds</h2>\n      <input \n        type=\"text\" \n        placeholder=\"Recipient Address\" \n        value={transferTo} \n        onChange={(e) => setTransferTo(e.target.value)} \n      />\n      <input \n        type=\"text\" \n        placeholder=\"Amount in ETH\" \n        value={transferAmount} \n        onChange={(e) => setTransferAmount(e.target.value)} \n      />\n      <button onClick={handleTransfer}>Transfer</button>\n    </div>\n  );\n}\n\nexport default Transfer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExD,eAAeW,cAAcA,CAAA,EAAG;IAC9B,IAAI;MACF,MAAMC,EAAE,GAAG,MAAMP,QAAQ,CAACQ,aAAa,CACrCN,UAAU,EACVN,MAAM,CAACa,KAAK,CAACC,UAAU,CAACN,cAAc,CAAC,EACvC;QAAEO,KAAK,EAAE;MAAE,CAAC,CAAC;MACf,CAAC;MACD,MAAMJ,EAAE,CAACK,IAAI,CAAC,CAAC;MACfC,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBD,KAAK,CAAC,kBAAkB,CAAC;IAC3B;EACF;EAEA,oBACEf,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BZ,KAAK,EAAET,UAAW;MAClBsB,QAAQ,EAAGC,CAAC,IAAKtB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACf,KAAK;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,eAAe;MAC3BZ,KAAK,EAAEP,cAAe;MACtBoB,QAAQ,EAAGC,CAAC,IAAKpB,iBAAiB,CAACoB,CAAC,CAACC,MAAM,CAACf,KAAK;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACFvB,OAAA;MAAQ6B,OAAO,EAAErB,cAAe;MAAAW,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACpB,EAAA,CArCQF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAuCjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}