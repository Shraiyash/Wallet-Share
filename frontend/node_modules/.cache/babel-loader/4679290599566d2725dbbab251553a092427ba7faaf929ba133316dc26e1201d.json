{"ast":null,"code":"var _jsxFileName = \"/Users/yash/smart-wallet/frontend/src/components/Deposit.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { motion } from 'framer-motion';\nimport Input from './Input'; // adjust path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Deposit({\n  contract\n}) {\n  _s();\n  const [depositAmount, setDepositAmount] = useState(\"\");\n  const handleChange = (e, name) => {\n    // For now, we assume there's only one input.\n    setDepositAmount(e.target.value);\n  };\n  const handleDeposit = async () => {\n    try {\n      const tx = await contract.deposit({\n        value: ethers.utils.parseEther(depositAmount)\n      });\n      await tx.wait();\n      alert(\"Deposit successful!\");\n      setDepositAmount(\"\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Deposit failed!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5 sm:w-96 w-full flex flex-col justify-start items-center blue-glassmorphism\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Amount in ETH\",\n      name: \"depositAmount\",\n      type: \"number\",\n      value: depositAmount,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeposit,\n      className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded\",\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Deposit, \"VFLgqtRiezfZVqxXzGsW0T+J0DE=\");\n_c = Deposit;\nexport default Deposit;\nvar _c;\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"names":["React","useState","ethers","motion","Input","jsxDEV","_jsxDEV","Deposit","contract","_s","depositAmount","setDepositAmount","handleChange","e","name","target","value","handleDeposit","tx","deposit","utils","parseEther","wait","alert","err","console","error","className","children","placeholder","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/yash/smart-wallet/frontend/src/components/Deposit.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { motion } from 'framer-motion';\nimport Input from './Input'; // adjust path as needed\n\nfunction Deposit({ contract }) {\n  const [depositAmount, setDepositAmount] = useState(\"\");\n\n  const handleChange = (e, name) => {\n    // For now, we assume there's only one input.\n    setDepositAmount(e.target.value);\n  };\n\n  const handleDeposit = async () => {\n    try {\n      const tx = await contract.deposit({\n        value: ethers.utils.parseEther(depositAmount)\n      });\n      await tx.wait();\n      alert(\"Deposit successful!\");\n      setDepositAmount(\"\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Deposit failed!\");\n    }\n  };\n\n  return (\n    <div className=\"p-5 sm:w-96 w-full flex flex-col justify-start items-center blue-glassmorphism\">\n      <Input \n        placeholder=\"Amount in ETH\" \n        name=\"depositAmount\" \n        type=\"number\" \n        value={depositAmount} \n        handleChange={handleChange} \n      />\n      <button onClick={handleDeposit} className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded\">\n        Deposit\n      </button>\n    </div>\n  );\n}\n\nexport default Deposit;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,OAAOA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,YAAY,GAAGA,CAACC,CAAC,EAAEC,IAAI,KAAK;IAChC;IACAH,gBAAgB,CAACE,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,EAAE,GAAG,MAAMV,QAAQ,CAACW,OAAO,CAAC;QAChCH,KAAK,EAAEd,MAAM,CAACkB,KAAK,CAACC,UAAU,CAACX,aAAa;MAC9C,CAAC,CAAC;MACF,MAAMQ,EAAE,CAACI,IAAI,CAAC,CAAC;MACfC,KAAK,CAAC,qBAAqB,CAAC;MAC5BZ,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBD,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKqB,SAAS,EAAC,gFAAgF;IAAAC,QAAA,gBAC7FtB,OAAA,CAACF,KAAK;MACJyB,WAAW,EAAC,eAAe;MAC3Bf,IAAI,EAAC,eAAe;MACpBgB,IAAI,EAAC,QAAQ;MACbd,KAAK,EAAEN,aAAc;MACrBE,YAAY,EAAEA;IAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF5B,OAAA;MAAQ6B,OAAO,EAAElB,aAAc;MAACU,SAAS,EAAC,+CAA+C;MAAAC,QAAA,EAAC;IAE1F;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACzB,EAAA,CApCQF,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAsChB,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}